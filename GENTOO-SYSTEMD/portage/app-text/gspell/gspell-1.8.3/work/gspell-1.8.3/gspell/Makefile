# Makefile.in generated by automake 1.16.1 from Makefile.am.
# gspell/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# aminclude_static.am generated automatically by Autoconf
# from AX_AM_MACROS_STATIC on Sat Jan 25 09:20:45 CET 2020




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/gspell
pkgincludedir = $(includedir)/gspell
pkglibdir = $(libdir)/gspell
pkglibexecdir = $(libexecdir)/gspell
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
#am__append_1 = \
#	-framework Cocoa

#am__append_2 = \
#	-xobjective-c

#am__append_3 = \
#	gspell-osx.h

#am__append_4 = \
#	gspell-osx.c

am__append_5 = \
	$(gir_DATA)	\
	$(typelib_DATA)

am__append_6 = $(vapi_DATA)
subdir = gspell
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_ac_append_to_file.m4 \
	$(top_srcdir)/m4/ax_ac_print_to_file.m4 \
	$(top_srcdir)/m4/ax_add_am_macro_static.m4 \
	$(top_srcdir)/m4/ax_am_macros_static.m4 \
	$(top_srcdir)/m4/ax_append_compile_flags.m4 \
	$(top_srcdir)/m4/ax_append_flag.m4 \
	$(top_srcdir)/m4/ax_append_link_flags.m4 \
	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_check_gnu_make.m4 \
	$(top_srcdir)/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/m4/ax_code_coverage.m4 \
	$(top_srcdir)/m4/ax_compiler_flags.m4 \
	$(top_srcdir)/m4/ax_compiler_flags_cflags.m4 \
	$(top_srcdir)/m4/ax_compiler_flags_gir.m4 \
	$(top_srcdir)/m4/ax_compiler_flags_ldflags.m4 \
	$(top_srcdir)/m4/ax_file_escapes.m4 \
	$(top_srcdir)/m4/ax_is_release.m4 \
	$(top_srcdir)/m4/ax_pkg_check_modules.m4 \
	$(top_srcdir)/m4/ax_require_defined.m4 \
	$(top_srcdir)/m4/ax_valgrind_check.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/gtk-doc.m4 \
	$(top_srcdir)/m4/host-cpu-c-abi.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/intlmacosx.m4 \
	$(top_srcdir)/m4/introspection.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/vapigen.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(libgspell_include_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(girdir)" \
	"$(DESTDIR)$(typelibdir)" "$(DESTDIR)$(vapidir)" \
	"$(DESTDIR)$(libgspell_includedir)" \
	"$(DESTDIR)$(libgspell_includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
libgspell_1_la_DEPENDENCIES = libgspell-core.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_libgspell_1_la_OBJECTS =
libgspell_1_la_OBJECTS =  \
	$(am_libgspell_1_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libgspell_1_la_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CCLD) $(libgspell_1_la_CFLAGS) $(CFLAGS) \
	$(libgspell_1_la_LDFLAGS) $(LDFLAGS) -o $@
libgspell_core_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__libgspell_core_la_SOURCES_DIST = gspellregion.c \
	gspell-context-menu.c gspell-current-word-policy.c \
	gspell-entry-utils.c gspell-init.c \
	gspell-inline-checker-text-buffer.c gspell-text-iter.c \
	gspell-utils.c gspell-osx.c gconstructor.h gspellregion.h \
	gspell-checker-private.h gspell-context-menu.h \
	gspell-current-word-policy.h gspell-entry-private.h \
	gspell-entry-utils.h gspell-init.h \
	gspell-inline-checker-text-buffer.h gspell-text-iter.h \
	gspell-utils.h gspell-osx.h gspell-checker.c \
	gspell-checker-dialog.c gspell-entry.c gspell-entry-buffer.c \
	gspell-language.c gspell-language-chooser.c \
	gspell-language-chooser-button.c \
	gspell-language-chooser-dialog.c gspell-navigator.c \
	gspell-navigator-text-view.c gspell-text-buffer.c \
	gspell-text-view.c gspell.h gspell-checker.h \
	gspell-checker-dialog.h gspell-entry.h gspell-entry-buffer.h \
	gspell-language.h gspell-language-chooser.h \
	gspell-language-chooser-button.h \
	gspell-language-chooser-dialog.h gspell-navigator.h \
	gspell-navigator-text-view.h gspell-text-buffer.h \
	gspell-text-view.h gspell-version.h
#am__objects_1 = libgspell_core_la-gspell-osx.lo
am__objects_2 = libgspell_core_la-gspellregion.lo \
	libgspell_core_la-gspell-context-menu.lo \
	libgspell_core_la-gspell-current-word-policy.lo \
	libgspell_core_la-gspell-entry-utils.lo \
	libgspell_core_la-gspell-init.lo \
	libgspell_core_la-gspell-inline-checker-text-buffer.lo \
	libgspell_core_la-gspell-text-iter.lo \
	libgspell_core_la-gspell-utils.lo $(am__objects_1)
am__objects_3 =
am__objects_4 = $(am__objects_3)
am__objects_5 = libgspell_core_la-gspell-checker.lo \
	libgspell_core_la-gspell-checker-dialog.lo \
	libgspell_core_la-gspell-entry.lo \
	libgspell_core_la-gspell-entry-buffer.lo \
	libgspell_core_la-gspell-language.lo \
	libgspell_core_la-gspell-language-chooser.lo \
	libgspell_core_la-gspell-language-chooser-button.lo \
	libgspell_core_la-gspell-language-chooser-dialog.lo \
	libgspell_core_la-gspell-navigator.lo \
	libgspell_core_la-gspell-navigator-text-view.lo \
	libgspell_core_la-gspell-text-buffer.lo \
	libgspell_core_la-gspell-text-view.lo
am_libgspell_core_la_OBJECTS = $(am__objects_2) $(am__objects_4) \
	$(am__objects_5) $(am__objects_3)
am__objects_6 = libgspell_core_la-gspell-enum-types.lo
am__objects_7 = libgspell_core_la-gspell-resources.lo $(am__objects_6) \
	$(am__objects_3)
nodist_libgspell_core_la_OBJECTS = $(am__objects_7)
libgspell_core_la_OBJECTS = $(am_libgspell_core_la_OBJECTS) \
	$(nodist_libgspell_core_la_OBJECTS)
libgspell_core_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libgspell_core_la_CFLAGS) $(CFLAGS) \
	$(libgspell_core_la_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade =  \
	./$(DEPDIR)/libgspell_core_la-gspell-checker-dialog.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-checker.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-context-menu.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-current-word-policy.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-entry-buffer.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-entry-utils.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-entry.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-enum-types.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-init.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-inline-checker-text-buffer.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-language-chooser-button.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-language-chooser-dialog.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-language-chooser.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-language.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-navigator-text-view.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-navigator.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-osx.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-resources.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-text-buffer.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-text-iter.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-text-view.Plo \
	./$(DEPDIR)/libgspell_core_la-gspell-utils.Plo \
	./$(DEPDIR)/libgspell_core_la-gspellregion.Plo
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libgspell_1_la_SOURCES) \
	$(libgspell_core_la_SOURCES) \
	$(nodist_libgspell_core_la_SOURCES)
DIST_SOURCES = $(libgspell_1_la_SOURCES) \
	$(am__libgspell_core_la_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(gir_DATA) $(typelib_DATA) $(vapi_DATA)
HEADERS = $(libgspell_include_HEADERS) \
	$(nodist_libgspell_include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir distdir-am
am__extra_recursive_targets = check-valgrind-recursive \
	check-valgrind-memcheck-recursive \
	check-valgrind-helgrind-recursive check-valgrind-drd-recursive \
	check-valgrind-sgcheck-recursive
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/aminclude_static.am $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /var/tmp/portage/app-text/gspell-1.8.3/work/gspell-1.8.3/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = x86_64-pc-linux-gnu-ar
AUTOCONF = ${SHELL} /var/tmp/portage/app-text/gspell-1.8.3/work/gspell-1.8.3/missing autoconf
AUTOHEADER = ${SHELL} /var/tmp/portage/app-text/gspell-1.8.3/work/gspell-1.8.3/missing autoheader
AUTOMAKE = ${SHELL} /var/tmp/portage/app-text/gspell-1.8.3/work/gspell-1.8.3/missing automake-1.16
AWK = gawk
AX_PACKAGE_REQUIRES =  glib-2.0 >= 2.44 gtk+-3.0 >= 3.20 enchant-2 >= 2.1.3
AX_PACKAGE_REQUIRES_PRIVATE =  
CC = x86_64-pc-linux-gnu-gcc
CCDEPMODE = depmode=none
CFLAGS = -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -flto=3 -fuse-linker-plugin -march=native -mfpmath=sse+387 -falign-functions=32 -flimit-function-alignment -fno-plt -fno-math-errno -fno-trapping-math -fno-stack-protector -pipe -Wl,-O2 -Wl,--as-needed,-z,now -Wl,--hash-style=gnu
CODE_COVERAGE_CFLAGS = 
CODE_COVERAGE_CPPFLAGS = 
CODE_COVERAGE_CXXFLAGS = 
CODE_COVERAGE_ENABLED = no
CODE_COVERAGE_LIBS = 
CPP = x86_64-pc-linux-gnu-gcc -E
CPPFLAGS = -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -flto=3 -fuse-linker-plugin -march=native -mfpmath=sse+387 -falign-functions=32 -flimit-function-alignment -fno-plt -fno-math-errno -fno-trapping-math -fno-stack-protector -pipe
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DEP_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/gtk-3.0 -I/usr/include/pango-1.0 -I/usr/lib64/libffi/include -I/usr/include/harfbuzz -I/usr/include/fribidi -I/usr/include/freetype2 -I/usr/include/uuid -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/libdrm -I/usr/include/libpng16 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/gio-unix-2.0 -I/usr/include/atk-1.0 -I/usr/include/enchant-2 -pthread 
DEP_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -lharfbuzz -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 -lenchant-2 
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_VALGRIND_drd = no
ENABLE_VALGRIND_helgrind = no
ENABLE_VALGRIND_memcheck = no
ENABLE_VALGRIND_sgcheck = no
EXEEXT = 
FGREP = /bin/grep -F
GCOV = 
GENHTML = 
GETTEXT_MACRO_VERSION = 0.20
GETTEXT_PACKAGE = gspell-1
GLIB_COMPILE_RESOURCES = /usr/bin/glib-compile-resources
GLIB_MKENUMS = /usr/bin/glib-mkenums
GMSGFMT = /usr/bin/gmsgfmt
GMSGFMT_015 = /usr/bin/gmsgfmt
GREP = /bin/grep
GSPELL_API_VERSION = 1
GSPELL_HIDDEN_VISIBILITY_CFLAGS = -fvisibility=hidden
GSPELL_LT_VERSION = 5:0:3
GTKDOC_CHECK = gtkdoc-check.test
GTKDOC_CHECK_PATH = /usr/bin/gtkdoc-check
GTKDOC_DEPS_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/lib64/libffi/include 
GTKDOC_DEPS_LIBS = -lgobject-2.0 -lglib-2.0 
GTKDOC_MKPDF = /usr/bin/gtkdoc-mkpdf
GTKDOC_REBASE = /usr/bin/gtkdoc-rebase
GTK_MAC_CFLAGS = 
GTK_MAC_LIBS = 
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/lib/portage/python3.6/ebuild-helpers/xattr/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
INTROSPECTION_CFLAGS = -I/usr/include/gobject-introspection-1.0 -I/usr/lib64/libffi/include -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -pthread 
INTROSPECTION_COMPILER = /usr/bin/g-ir-compiler
INTROSPECTION_GENERATE = /usr/bin/g-ir-generate
INTROSPECTION_GIRDIR = /usr/share/gir-1.0
INTROSPECTION_LIBS = -lgirepository-1.0 -lgobject-2.0 -lglib-2.0 
INTROSPECTION_MAKEFILE = /usr/share/gobject-introspection-1.0/Makefile.introspection
INTROSPECTION_SCANNER = /usr/bin/g-ir-scanner
INTROSPECTION_TYPELIBDIR = /usr/lib64/girepository-1.0
LCOV = 
LD = /usr/x86_64-pc-linux-gnu/bin/ld -m elf_x86_64
LDFLAGS = -Wl,-O2 -Wl,--as-needed,-z,now -Wl,--hash-style=gnu -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -flto=3 -fuse-linker-plugin -march=native -mfpmath=sse+387 -falign-functions=32 -flimit-function-alignment -fno-plt -fno-math-errno -fno-trapping-math -fno-stack-protector -pipe
LIBICONV = -liconv
LIBINTL = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /var/tmp/portage/app-text/gspell-1.8.3/work/gspell-1.8.3/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MSGFMT = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
MSGMERGE_FOR_MSGFMT_OPTION = --for-msgfmt
NM = /usr/bin/x86_64-pc-linux-gnu-nm -B
NMEDIT = 
OBJC = x86_64-pc-linux-gnu-gcc
OBJCDEPMODE = depmode=none
OBJCFLAGS = 
OBJDUMP = x86_64-pc-linux-gnu-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = gspell
PACKAGE_BUGREPORT = https://gitlab.gnome.org/GNOME/gspell/issues
PACKAGE_NAME = gspell
PACKAGE_STRING = gspell 1.8.3
PACKAGE_TARNAME = gspell
PACKAGE_URL = https://wiki.gnome.org/Projects/gspell
PACKAGE_VERSION = 1.8.3
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/x86_64-pc-linux-gnu-pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /var/tmp/portage/app-text/gspell-1.8.3/temp/pkgconfig:/usr/lib64/pkgconfig:/usr/share/pkgconfig
POSUB = po
RANLIB = x86_64-pc-linux-gnu-ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = x86_64-pc-linux-gnu-strip
USE_NLS = yes
VALGRIND = 
VALGRIND_ENABLED = no
VAPIGEN = /usr/bin/vapigen-0.46
VAPIGEN_MAKEFILE = /usr/share/vala/Makefile.vapigen
VAPIGEN_VAPIDIR = /usr/share/vala/vapi
VERSION = 1.8.3
WARN_CFLAGS = -fno-strict-aliasing -Wnested-externs -Wmissing-prototypes -Wstrict-prototypes -Wdeclaration-after-statement -Wimplicit-function-declaration -Wold-style-definition -Wjump-misses-init -Wall -Wextra -Wundef -Wwrite-strings -Wpointer-arith -Wmissing-declarations -Wredundant-decls -Wno-unused-parameter -Wno-missing-field-initializers -Wformat=2 -Wcast-align -Wformat-nonliteral -Wformat-security -Wsign-compare -Wstrict-aliasing -Wshadow -Winline -Wpacked -Wmissing-format-attribute -Wmissing-noreturn -Winit-self -Wmissing-include-dirs -Wunused-but-set-variable -Warray-bounds -Wreturn-type -Wswitch-enum -Wswitch-default -Wduplicated-cond -Wduplicated-branches -Wlogical-op -Wrestrict -Wnull-dereference -Wdouble-promotion -Wno-error=unused-parameter -Wno-error=missing-field-initializers
WARN_LDFLAGS = -Wl,--no-as-needed
WARN_SCANNERFLAGS =               --warn-all                                                             
XGETTEXT = /usr/bin/xgettext
XGETTEXT_015 = /usr/bin/xgettext
XGETTEXT_EXTRA_OPTIONS = 
abs_builddir = /var/tmp/portage/app-text/gspell-1.8.3/work/gspell-1.8.3/gspell
abs_srcdir = /var/tmp/portage/app-text/gspell-1.8.3/work/gspell-1.8.3/gspell
abs_top_builddir = /var/tmp/portage/app-text/gspell-1.8.3/work/gspell-1.8.3
abs_top_srcdir = /var/tmp/portage/app-text/gspell-1.8.3/work/gspell-1.8.3
ac_ct_AR = 
ac_ct_CC = 
ac_ct_DUMPBIN = 
ac_ct_OBJC = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = x86_64-pc-linux-gnu
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = /usr/share
datarootdir = ${prefix}/share
docdir = /usr/share/doc/gspell-1.8.3
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = x86_64-pc-linux-gnu
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = /usr/share/doc/gspell-1.8.3/html
ifGNUmake = 
ifnGNUmake = 
includedir = ${prefix}/include
infodir = /usr/share/info
install_sh = ${SHELL} /var/tmp/portage/app-text/gspell-1.8.3/work/gspell-1.8.3/install-sh
libdir = /usr/lib64
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = /var/lib
mandir = /usr/share/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgconfigdir = ${libdir}/pkgconfig
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
valgrind_enabled_tools = 
valgrind_tools = memcheck helgrind drd sgcheck
SUBDIRS = resources
#GITIGNOREFILES := $(GITIGNOREFILES) $(CODE_COVERAGE_OUTPUT_FILE) $(CODE_COVERAGE_OUTPUT_DIRECTORY)
#code_coverage_v_lcov_cap = $(code_coverage_v_lcov_cap_$(V))
#code_coverage_v_lcov_cap_ = $(code_coverage_v_lcov_cap_$(AM_DEFAULT_VERBOSITY))
#code_coverage_v_lcov_cap_0 = @echo "  LCOV   --capture" $(CODE_COVERAGE_OUTPUT_FILE);
#code_coverage_v_lcov_ign = $(code_coverage_v_lcov_ign_$(V))
#code_coverage_v_lcov_ign_ = $(code_coverage_v_lcov_ign_$(AM_DEFAULT_VERBOSITY))
#code_coverage_v_lcov_ign_0 = @echo "  LCOV   --remove /tmp/*" $(CODE_COVERAGE_IGNORE_PATTERN);
#code_coverage_v_genhtml = $(code_coverage_v_genhtml_$(V))
#code_coverage_v_genhtml_ = $(code_coverage_v_genhtml_$(AM_DEFAULT_VERBOSITY))
#code_coverage_v_genhtml_0 = @echo "  GEN   " "$(CODE_COVERAGE_OUTPUT_DIRECTORY)";
#code_coverage_quiet = $(code_coverage_quiet_$(V))
#code_coverage_quiet_ = $(code_coverage_quiet_$(AM_DEFAULT_VERBOSITY))
#code_coverage_quiet_0 = --quiet

# sanitizes the test-name: replaces with underscores: dashes and dots
#code_coverage_sanitize = $(subst -,_,$(subst .,_,$(1)))
#AM_DISTCHECK_CONFIGURE_FLAGS := $(AM_DISTCHECK_CONFIGURE_FLAGS) --disable-code-coverage
AM_CPPFLAGS = \
	-DDATADIR=\""$(datadir)"\"	\
	-DG_LOG_DOMAIN=\"gspell\"	\
	-DGSPELL_COMPILATION		\
	-I$(top_builddir)		\
	-I$(top_srcdir)			\
	$(WARN_CFLAGS)			\
	$(CODE_COVERAGE_CPPFLAGS)	\
	$(DEP_CFLAGS)			\
	$(GTK_MAC_CFLAGS)

gspell_public_headers = \
	gspell.h				\
	gspell-checker.h			\
	gspell-checker-dialog.h			\
	gspell-entry.h				\
	gspell-entry-buffer.h			\
	gspell-language.h			\
	gspell-language-chooser.h		\
	gspell-language-chooser-button.h	\
	gspell-language-chooser-dialog.h	\
	gspell-navigator.h			\
	gspell-navigator-text-view.h		\
	gspell-text-buffer.h			\
	gspell-text-view.h			\
	gspell-version.h

gspell_public_c_files = \
	gspell-checker.c			\
	gspell-checker-dialog.c			\
	gspell-entry.c				\
	gspell-entry-buffer.c			\
	gspell-language.c			\
	gspell-language-chooser.c		\
	gspell-language-chooser-button.c	\
	gspell-language-chooser-dialog.c	\
	gspell-navigator.c			\
	gspell-navigator-text-view.c		\
	gspell-text-buffer.c			\
	gspell-text-view.c

gspell_private_headers = gconstructor.h gspellregion.h \
	gspell-checker-private.h gspell-context-menu.h \
	gspell-current-word-policy.h gspell-entry-private.h \
	gspell-entry-utils.h gspell-init.h \
	gspell-inline-checker-text-buffer.h gspell-text-iter.h \
	gspell-utils.h $(am__append_3)
gspell_private_c_files = gspellregion.c gspell-context-menu.c \
	gspell-current-word-policy.c gspell-entry-utils.c \
	gspell-init.c gspell-inline-checker-text-buffer.c \
	gspell-text-iter.c gspell-utils.c $(am__append_4)
gspell_built_public_headers = \
	gspell-enum-types.h

gspell_built_public_c_files = \
	gspell-enum-types.c

BUILT_SOURCES = \
	gspell-resources.c		\
	$(gspell_built_public_c_files)	\
	$(gspell_built_public_headers)


# Helper Libtool library, so that the private functions can be used in unit
# tests.
noinst_LTLIBRARIES = libgspell-core.la
libgspell_core_la_SOURCES = \
	$(gspell_private_c_files)	\
	$(gspell_private_headers)	\
	$(gspell_public_c_files)	\
	$(gspell_public_headers)


# Do not distribute generated files.
nodist_libgspell_core_la_SOURCES = \
	$(BUILT_SOURCES)

libgspell_core_la_LIBADD = \
	$(CODE_COVERAGE_LIBS)

libgspell_core_la_CFLAGS = \
	$(GSPELL_HIDDEN_VISIBILITY_CFLAGS)	\
	$(CODE_COVERAGE_CFLAGS)

libgspell_core_la_LDFLAGS = \
	-no-undefined		\
	$(WARN_LDFLAGS)


# The real library.
lib_LTLIBRARIES = libgspell-1.la
libgspell_1_la_SOURCES = 
libgspell_1_la_LIBADD = \
	libgspell-core.la			\
	$(DEP_LIBS)				\
	$(GTK_MAC_LIBS)				\
	$(CODE_COVERAGE_LIBS)

libgspell_1_la_CFLAGS =  \
	$(GSPELL_HIDDEN_VISIBILITY_CFLAGS) $(CODE_COVERAGE_CFLAGS) \
	$(am__append_2)
libgspell_1_la_LDFLAGS = -version-info \
	$(GSPELL_LT_VERSION) -no-undefined -export-dynamic \
	$(WARN_LDFLAGS) $(am__append_1)
libgspell_includedir = $(includedir)/gspell-1/gspell
libgspell_include_HEADERS = $(gspell_public_headers)
nodist_libgspell_include_HEADERS = $(gspell_built_public_headers)
xml_res = $(srcdir)/resources/gspell.gresource.xml
ENUM_TYPES = $(gspell_public_headers)
EXTRA_DIST = \
	gspell-enum-types.c.template	\
	gspell-enum-types.h.template

CLEANFILES = $(BUILT_SOURCES) $(am__append_5) $(am__append_6)
INTROSPECTION_GIRS = Gspell-1.gir
INTROSPECTION_SCANNER_ENV = CC="$(CC)"
INTROSPECTION_SCANNER_ARGS = \
	-I$(top_srcdir)			\
	-I$(top_builddir)		\
	--c-include=gspell/gspell.h	\
	--warn-all

Gspell_1_gir_NAMESPACE = Gspell
Gspell_1_gir_VERSION = 1
Gspell_1_gir_CFLAGS = $(DEP_CFLAGS)
Gspell_1_gir_SCANNERFLAGS = $(WARN_SCANNERFLAGS)
Gspell_1_gir_LIBS = libgspell-1.la
Gspell_1_gir_FILES = \
	$(gspell_public_headers)	\
	$(gspell_public_c_files)	\
	$(gspell_built_public_headers)	\
	$(gspell_built_public_c_files)

Gspell_1_gir_INCLUDES = Gtk-3.0
Gspell_1_gir_PACKAGES = gtk+-3.0
Gspell_1_gir_EXPORT_PACKAGES = gspell-1
girdir = $(datadir)/gir-1.0
gir_DATA = Gspell-1.gir
typelibdir = $(libdir)/girepository-1.0
typelib_DATA = Gspell-1.typelib
VAPIGEN_VAPIS = gspell-1.vapi
gspell_1_vapi_DEPS = gtk+-3.0
gspell_1_vapi_METADATADIRS = $(srcdir)
gspell_1_vapi_FILES = Gspell-1.gir
vapidir = $(datadir)/vala/vapi
vapi_DATA = \
	gspell-1.vapi	\
	gspell-1.deps

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/aminclude_static.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu gspell/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu gspell/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/aminclude_static.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libgspell-1.la: $(libgspell_1_la_OBJECTS) $(libgspell_1_la_DEPENDENCIES) $(EXTRA_libgspell_1_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libgspell_1_la_LINK) -rpath $(libdir) $(libgspell_1_la_OBJECTS) $(libgspell_1_la_LIBADD) $(LIBS)

libgspell-core.la: $(libgspell_core_la_OBJECTS) $(libgspell_core_la_DEPENDENCIES) $(EXTRA_libgspell_core_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libgspell_core_la_LINK)  $(libgspell_core_la_OBJECTS) $(libgspell_core_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/libgspell_core_la-gspell-checker-dialog.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-checker.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-context-menu.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-current-word-policy.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-entry-buffer.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-entry-utils.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-entry.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-enum-types.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-init.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-inline-checker-text-buffer.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-language-chooser-button.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-language-chooser-dialog.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-language-chooser.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-language.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-navigator-text-view.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-navigator.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-osx.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-resources.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-text-buffer.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-text-iter.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-text-view.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspell-utils.Plo # am--include-marker
#include ./$(DEPDIR)/libgspell_core_la-gspellregion.Plo # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
#	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
#	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
#	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

libgspell_core_la-gspellregion.lo: gspellregion.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspellregion.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspellregion.Tpo -c -o libgspell_core_la-gspellregion.lo `test -f 'gspellregion.c' || echo '$(srcdir)/'`gspellregion.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspellregion.Tpo $(DEPDIR)/libgspell_core_la-gspellregion.Plo
#	$(AM_V_CC)source='gspellregion.c' object='libgspell_core_la-gspellregion.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspellregion.lo `test -f 'gspellregion.c' || echo '$(srcdir)/'`gspellregion.c

libgspell_core_la-gspell-context-menu.lo: gspell-context-menu.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-context-menu.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-context-menu.Tpo -c -o libgspell_core_la-gspell-context-menu.lo `test -f 'gspell-context-menu.c' || echo '$(srcdir)/'`gspell-context-menu.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-context-menu.Tpo $(DEPDIR)/libgspell_core_la-gspell-context-menu.Plo
#	$(AM_V_CC)source='gspell-context-menu.c' object='libgspell_core_la-gspell-context-menu.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-context-menu.lo `test -f 'gspell-context-menu.c' || echo '$(srcdir)/'`gspell-context-menu.c

libgspell_core_la-gspell-current-word-policy.lo: gspell-current-word-policy.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-current-word-policy.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-current-word-policy.Tpo -c -o libgspell_core_la-gspell-current-word-policy.lo `test -f 'gspell-current-word-policy.c' || echo '$(srcdir)/'`gspell-current-word-policy.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-current-word-policy.Tpo $(DEPDIR)/libgspell_core_la-gspell-current-word-policy.Plo
#	$(AM_V_CC)source='gspell-current-word-policy.c' object='libgspell_core_la-gspell-current-word-policy.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-current-word-policy.lo `test -f 'gspell-current-word-policy.c' || echo '$(srcdir)/'`gspell-current-word-policy.c

libgspell_core_la-gspell-entry-utils.lo: gspell-entry-utils.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-entry-utils.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-entry-utils.Tpo -c -o libgspell_core_la-gspell-entry-utils.lo `test -f 'gspell-entry-utils.c' || echo '$(srcdir)/'`gspell-entry-utils.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-entry-utils.Tpo $(DEPDIR)/libgspell_core_la-gspell-entry-utils.Plo
#	$(AM_V_CC)source='gspell-entry-utils.c' object='libgspell_core_la-gspell-entry-utils.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-entry-utils.lo `test -f 'gspell-entry-utils.c' || echo '$(srcdir)/'`gspell-entry-utils.c

libgspell_core_la-gspell-init.lo: gspell-init.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-init.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-init.Tpo -c -o libgspell_core_la-gspell-init.lo `test -f 'gspell-init.c' || echo '$(srcdir)/'`gspell-init.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-init.Tpo $(DEPDIR)/libgspell_core_la-gspell-init.Plo
#	$(AM_V_CC)source='gspell-init.c' object='libgspell_core_la-gspell-init.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-init.lo `test -f 'gspell-init.c' || echo '$(srcdir)/'`gspell-init.c

libgspell_core_la-gspell-inline-checker-text-buffer.lo: gspell-inline-checker-text-buffer.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-inline-checker-text-buffer.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-inline-checker-text-buffer.Tpo -c -o libgspell_core_la-gspell-inline-checker-text-buffer.lo `test -f 'gspell-inline-checker-text-buffer.c' || echo '$(srcdir)/'`gspell-inline-checker-text-buffer.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-inline-checker-text-buffer.Tpo $(DEPDIR)/libgspell_core_la-gspell-inline-checker-text-buffer.Plo
#	$(AM_V_CC)source='gspell-inline-checker-text-buffer.c' object='libgspell_core_la-gspell-inline-checker-text-buffer.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-inline-checker-text-buffer.lo `test -f 'gspell-inline-checker-text-buffer.c' || echo '$(srcdir)/'`gspell-inline-checker-text-buffer.c

libgspell_core_la-gspell-text-iter.lo: gspell-text-iter.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-text-iter.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-text-iter.Tpo -c -o libgspell_core_la-gspell-text-iter.lo `test -f 'gspell-text-iter.c' || echo '$(srcdir)/'`gspell-text-iter.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-text-iter.Tpo $(DEPDIR)/libgspell_core_la-gspell-text-iter.Plo
#	$(AM_V_CC)source='gspell-text-iter.c' object='libgspell_core_la-gspell-text-iter.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-text-iter.lo `test -f 'gspell-text-iter.c' || echo '$(srcdir)/'`gspell-text-iter.c

libgspell_core_la-gspell-utils.lo: gspell-utils.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-utils.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-utils.Tpo -c -o libgspell_core_la-gspell-utils.lo `test -f 'gspell-utils.c' || echo '$(srcdir)/'`gspell-utils.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-utils.Tpo $(DEPDIR)/libgspell_core_la-gspell-utils.Plo
#	$(AM_V_CC)source='gspell-utils.c' object='libgspell_core_la-gspell-utils.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-utils.lo `test -f 'gspell-utils.c' || echo '$(srcdir)/'`gspell-utils.c

libgspell_core_la-gspell-osx.lo: gspell-osx.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-osx.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-osx.Tpo -c -o libgspell_core_la-gspell-osx.lo `test -f 'gspell-osx.c' || echo '$(srcdir)/'`gspell-osx.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-osx.Tpo $(DEPDIR)/libgspell_core_la-gspell-osx.Plo
#	$(AM_V_CC)source='gspell-osx.c' object='libgspell_core_la-gspell-osx.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-osx.lo `test -f 'gspell-osx.c' || echo '$(srcdir)/'`gspell-osx.c

libgspell_core_la-gspell-checker.lo: gspell-checker.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-checker.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-checker.Tpo -c -o libgspell_core_la-gspell-checker.lo `test -f 'gspell-checker.c' || echo '$(srcdir)/'`gspell-checker.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-checker.Tpo $(DEPDIR)/libgspell_core_la-gspell-checker.Plo
#	$(AM_V_CC)source='gspell-checker.c' object='libgspell_core_la-gspell-checker.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-checker.lo `test -f 'gspell-checker.c' || echo '$(srcdir)/'`gspell-checker.c

libgspell_core_la-gspell-checker-dialog.lo: gspell-checker-dialog.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-checker-dialog.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-checker-dialog.Tpo -c -o libgspell_core_la-gspell-checker-dialog.lo `test -f 'gspell-checker-dialog.c' || echo '$(srcdir)/'`gspell-checker-dialog.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-checker-dialog.Tpo $(DEPDIR)/libgspell_core_la-gspell-checker-dialog.Plo
#	$(AM_V_CC)source='gspell-checker-dialog.c' object='libgspell_core_la-gspell-checker-dialog.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-checker-dialog.lo `test -f 'gspell-checker-dialog.c' || echo '$(srcdir)/'`gspell-checker-dialog.c

libgspell_core_la-gspell-entry.lo: gspell-entry.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-entry.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-entry.Tpo -c -o libgspell_core_la-gspell-entry.lo `test -f 'gspell-entry.c' || echo '$(srcdir)/'`gspell-entry.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-entry.Tpo $(DEPDIR)/libgspell_core_la-gspell-entry.Plo
#	$(AM_V_CC)source='gspell-entry.c' object='libgspell_core_la-gspell-entry.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-entry.lo `test -f 'gspell-entry.c' || echo '$(srcdir)/'`gspell-entry.c

libgspell_core_la-gspell-entry-buffer.lo: gspell-entry-buffer.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-entry-buffer.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-entry-buffer.Tpo -c -o libgspell_core_la-gspell-entry-buffer.lo `test -f 'gspell-entry-buffer.c' || echo '$(srcdir)/'`gspell-entry-buffer.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-entry-buffer.Tpo $(DEPDIR)/libgspell_core_la-gspell-entry-buffer.Plo
#	$(AM_V_CC)source='gspell-entry-buffer.c' object='libgspell_core_la-gspell-entry-buffer.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-entry-buffer.lo `test -f 'gspell-entry-buffer.c' || echo '$(srcdir)/'`gspell-entry-buffer.c

libgspell_core_la-gspell-language.lo: gspell-language.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-language.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-language.Tpo -c -o libgspell_core_la-gspell-language.lo `test -f 'gspell-language.c' || echo '$(srcdir)/'`gspell-language.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-language.Tpo $(DEPDIR)/libgspell_core_la-gspell-language.Plo
#	$(AM_V_CC)source='gspell-language.c' object='libgspell_core_la-gspell-language.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-language.lo `test -f 'gspell-language.c' || echo '$(srcdir)/'`gspell-language.c

libgspell_core_la-gspell-language-chooser.lo: gspell-language-chooser.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-language-chooser.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-language-chooser.Tpo -c -o libgspell_core_la-gspell-language-chooser.lo `test -f 'gspell-language-chooser.c' || echo '$(srcdir)/'`gspell-language-chooser.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-language-chooser.Tpo $(DEPDIR)/libgspell_core_la-gspell-language-chooser.Plo
#	$(AM_V_CC)source='gspell-language-chooser.c' object='libgspell_core_la-gspell-language-chooser.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-language-chooser.lo `test -f 'gspell-language-chooser.c' || echo '$(srcdir)/'`gspell-language-chooser.c

libgspell_core_la-gspell-language-chooser-button.lo: gspell-language-chooser-button.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-language-chooser-button.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-language-chooser-button.Tpo -c -o libgspell_core_la-gspell-language-chooser-button.lo `test -f 'gspell-language-chooser-button.c' || echo '$(srcdir)/'`gspell-language-chooser-button.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-language-chooser-button.Tpo $(DEPDIR)/libgspell_core_la-gspell-language-chooser-button.Plo
#	$(AM_V_CC)source='gspell-language-chooser-button.c' object='libgspell_core_la-gspell-language-chooser-button.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-language-chooser-button.lo `test -f 'gspell-language-chooser-button.c' || echo '$(srcdir)/'`gspell-language-chooser-button.c

libgspell_core_la-gspell-language-chooser-dialog.lo: gspell-language-chooser-dialog.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-language-chooser-dialog.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-language-chooser-dialog.Tpo -c -o libgspell_core_la-gspell-language-chooser-dialog.lo `test -f 'gspell-language-chooser-dialog.c' || echo '$(srcdir)/'`gspell-language-chooser-dialog.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-language-chooser-dialog.Tpo $(DEPDIR)/libgspell_core_la-gspell-language-chooser-dialog.Plo
#	$(AM_V_CC)source='gspell-language-chooser-dialog.c' object='libgspell_core_la-gspell-language-chooser-dialog.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-language-chooser-dialog.lo `test -f 'gspell-language-chooser-dialog.c' || echo '$(srcdir)/'`gspell-language-chooser-dialog.c

libgspell_core_la-gspell-navigator.lo: gspell-navigator.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-navigator.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-navigator.Tpo -c -o libgspell_core_la-gspell-navigator.lo `test -f 'gspell-navigator.c' || echo '$(srcdir)/'`gspell-navigator.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-navigator.Tpo $(DEPDIR)/libgspell_core_la-gspell-navigator.Plo
#	$(AM_V_CC)source='gspell-navigator.c' object='libgspell_core_la-gspell-navigator.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-navigator.lo `test -f 'gspell-navigator.c' || echo '$(srcdir)/'`gspell-navigator.c

libgspell_core_la-gspell-navigator-text-view.lo: gspell-navigator-text-view.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-navigator-text-view.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-navigator-text-view.Tpo -c -o libgspell_core_la-gspell-navigator-text-view.lo `test -f 'gspell-navigator-text-view.c' || echo '$(srcdir)/'`gspell-navigator-text-view.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-navigator-text-view.Tpo $(DEPDIR)/libgspell_core_la-gspell-navigator-text-view.Plo
#	$(AM_V_CC)source='gspell-navigator-text-view.c' object='libgspell_core_la-gspell-navigator-text-view.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-navigator-text-view.lo `test -f 'gspell-navigator-text-view.c' || echo '$(srcdir)/'`gspell-navigator-text-view.c

libgspell_core_la-gspell-text-buffer.lo: gspell-text-buffer.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-text-buffer.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-text-buffer.Tpo -c -o libgspell_core_la-gspell-text-buffer.lo `test -f 'gspell-text-buffer.c' || echo '$(srcdir)/'`gspell-text-buffer.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-text-buffer.Tpo $(DEPDIR)/libgspell_core_la-gspell-text-buffer.Plo
#	$(AM_V_CC)source='gspell-text-buffer.c' object='libgspell_core_la-gspell-text-buffer.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-text-buffer.lo `test -f 'gspell-text-buffer.c' || echo '$(srcdir)/'`gspell-text-buffer.c

libgspell_core_la-gspell-text-view.lo: gspell-text-view.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-text-view.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-text-view.Tpo -c -o libgspell_core_la-gspell-text-view.lo `test -f 'gspell-text-view.c' || echo '$(srcdir)/'`gspell-text-view.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-text-view.Tpo $(DEPDIR)/libgspell_core_la-gspell-text-view.Plo
#	$(AM_V_CC)source='gspell-text-view.c' object='libgspell_core_la-gspell-text-view.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-text-view.lo `test -f 'gspell-text-view.c' || echo '$(srcdir)/'`gspell-text-view.c

libgspell_core_la-gspell-resources.lo: gspell-resources.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-resources.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-resources.Tpo -c -o libgspell_core_la-gspell-resources.lo `test -f 'gspell-resources.c' || echo '$(srcdir)/'`gspell-resources.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-resources.Tpo $(DEPDIR)/libgspell_core_la-gspell-resources.Plo
#	$(AM_V_CC)source='gspell-resources.c' object='libgspell_core_la-gspell-resources.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-resources.lo `test -f 'gspell-resources.c' || echo '$(srcdir)/'`gspell-resources.c

libgspell_core_la-gspell-enum-types.lo: gspell-enum-types.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -MT libgspell_core_la-gspell-enum-types.lo -MD -MP -MF $(DEPDIR)/libgspell_core_la-gspell-enum-types.Tpo -c -o libgspell_core_la-gspell-enum-types.lo `test -f 'gspell-enum-types.c' || echo '$(srcdir)/'`gspell-enum-types.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libgspell_core_la-gspell-enum-types.Tpo $(DEPDIR)/libgspell_core_la-gspell-enum-types.Plo
#	$(AM_V_CC)source='gspell-enum-types.c' object='libgspell_core_la-gspell-enum-types.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgspell_core_la_CFLAGS) $(CFLAGS) -c -o libgspell_core_la-gspell-enum-types.lo `test -f 'gspell-enum-types.c' || echo '$(srcdir)/'`gspell-enum-types.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-girDATA: $(gir_DATA)
	@$(NORMAL_INSTALL)
	@list='$(gir_DATA)'; test -n "$(girdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(girdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(girdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(girdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(girdir)" || exit $$?; \
	done

uninstall-girDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gir_DATA)'; test -n "$(girdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(girdir)'; $(am__uninstall_files_from_dir)
install-typelibDATA: $(typelib_DATA)
	@$(NORMAL_INSTALL)
	@list='$(typelib_DATA)'; test -n "$(typelibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(typelibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(typelibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(typelibdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(typelibdir)" || exit $$?; \
	done

uninstall-typelibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(typelib_DATA)'; test -n "$(typelibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(typelibdir)'; $(am__uninstall_files_from_dir)
install-vapiDATA: $(vapi_DATA)
	@$(NORMAL_INSTALL)
	@list='$(vapi_DATA)'; test -n "$(vapidir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vapidir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vapidir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(vapidir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(vapidir)" || exit $$?; \
	done

uninstall-vapiDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(vapi_DATA)'; test -n "$(vapidir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vapidir)'; $(am__uninstall_files_from_dir)
install-libgspell_includeHEADERS: $(libgspell_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(libgspell_include_HEADERS)'; test -n "$(libgspell_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libgspell_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libgspell_includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libgspell_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libgspell_includedir)" || exit $$?; \
	done

uninstall-libgspell_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libgspell_include_HEADERS)'; test -n "$(libgspell_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libgspell_includedir)'; $(am__uninstall_files_from_dir)
install-nodist_libgspell_includeHEADERS: $(nodist_libgspell_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nodist_libgspell_include_HEADERS)'; test -n "$(libgspell_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libgspell_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libgspell_includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libgspell_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libgspell_includedir)" || exit $$?; \
	done

uninstall-nodist_libgspell_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_libgspell_include_HEADERS)'; test -n "$(libgspell_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libgspell_includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"
check-valgrind-local: 
check-valgrind-memcheck-local: 
check-valgrind-helgrind-local: 
check-valgrind-drd-local: 
check-valgrind-sgcheck-local: 

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(girdir)" "$(DESTDIR)$(typelibdir)" "$(DESTDIR)$(vapidir)" "$(DESTDIR)$(libgspell_includedir)" "$(DESTDIR)$(libgspell_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
check-valgrind: check-valgrind-recursive

check-valgrind-am: check-valgrind-local

check-valgrind-drd: check-valgrind-drd-recursive

check-valgrind-drd-am: check-valgrind-drd-local

check-valgrind-helgrind: check-valgrind-helgrind-recursive

check-valgrind-helgrind-am: check-valgrind-helgrind-local

check-valgrind-memcheck: check-valgrind-memcheck-recursive

check-valgrind-memcheck-am: check-valgrind-memcheck-local

check-valgrind-sgcheck: check-valgrind-sgcheck-recursive

check-valgrind-sgcheck-am: check-valgrind-sgcheck-local

clean: clean-recursive

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool clean-local \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
		-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-checker-dialog.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-checker.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-context-menu.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-current-word-policy.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-entry-buffer.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-entry-utils.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-entry.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-enum-types.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-init.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-inline-checker-text-buffer.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-language-chooser-button.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-language-chooser-dialog.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-language-chooser.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-language.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-navigator-text-view.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-navigator.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-osx.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-resources.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-text-buffer.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-text-iter.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-text-view.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-utils.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspellregion.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-local distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-girDATA install-libgspell_includeHEADERS \
	install-nodist_libgspell_includeHEADERS install-typelibDATA \
	install-vapiDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
		-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-checker-dialog.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-checker.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-context-menu.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-current-word-policy.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-entry-buffer.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-entry-utils.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-entry.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-enum-types.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-init.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-inline-checker-text-buffer.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-language-chooser-button.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-language-chooser-dialog.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-language-chooser.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-language.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-navigator-text-view.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-navigator.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-osx.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-resources.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-text-buffer.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-text-iter.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-text-view.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspell-utils.Plo
	-rm -f ./$(DEPDIR)/libgspell_core_la-gspellregion.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-girDATA uninstall-libLTLIBRARIES \
	uninstall-libgspell_includeHEADERS \
	uninstall-nodist_libgspell_includeHEADERS \
	uninstall-typelibDATA uninstall-vapiDATA

.MAKE: $(am__recursive_targets) all check install install-am \
	install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--depfiles check check-am check-valgrind-am \
	check-valgrind-drd-am check-valgrind-drd-local \
	check-valgrind-helgrind-am check-valgrind-helgrind-local \
	check-valgrind-local check-valgrind-memcheck-am \
	check-valgrind-memcheck-local check-valgrind-sgcheck-am \
	check-valgrind-sgcheck-local clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-local \
	clean-noinstLTLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-local distclean-tags distdir dvi dvi-am html html-am \
	info info-am install install-am install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-girDATA install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES \
	install-libgspell_includeHEADERS install-man \
	install-nodist_libgspell_includeHEADERS install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	install-typelibDATA install-vapiDATA installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-girDATA \
	uninstall-libLTLIBRARIES uninstall-libgspell_includeHEADERS \
	uninstall-nodist_libgspell_includeHEADERS \
	uninstall-typelibDATA uninstall-vapiDATA

.PRECIOUS: Makefile


# Code coverage
#
# Optional:
#  - CODE_COVERAGE_DIRECTORY: Top-level directory for code coverage reporting.
#    Multiple directories may be specified, separated by whitespace.
#    (Default: $(top_builddir))
#  - CODE_COVERAGE_OUTPUT_FILE: Filename and path for the .info file generated
#    by lcov for code coverage. (Default:
#    $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage.info)
#  - CODE_COVERAGE_OUTPUT_DIRECTORY: Directory for generated code coverage
#    reports to be created. (Default:
#    $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage)
#  - CODE_COVERAGE_BRANCH_COVERAGE: Set to 1 to enforce branch coverage,
#    set to 0 to disable it and leave empty to stay with the default.
#    (Default: empty)
#  - CODE_COVERAGE_LCOV_SHOPTS_DEFAULT: Extra options shared between both lcov
#    instances. (Default: based on )
#  - CODE_COVERAGE_LCOV_SHOPTS: Extra options to shared between both lcov
#    instances. (Default: )
#  - CODE_COVERAGE_LCOV_OPTIONS_GCOVPATH: --gcov-tool pathtogcov
#  - CODE_COVERAGE_LCOV_OPTIONS_DEFAULT: Extra options to pass to the
#    collecting lcov instance. (Default: )
#  - CODE_COVERAGE_LCOV_OPTIONS: Extra options to pass to the collecting lcov
#    instance. (Default: )
#  - CODE_COVERAGE_LCOV_RMOPTS_DEFAULT: Extra options to pass to the filtering
#    lcov instance. (Default: empty)
#  - CODE_COVERAGE_LCOV_RMOPTS: Extra options to pass to the filtering lcov
#    instance. (Default: )
#  - CODE_COVERAGE_GENHTML_OPTIONS_DEFAULT: Extra options to pass to the
#    genhtml instance. (Default: based on )
#  - CODE_COVERAGE_GENHTML_OPTIONS: Extra options to pass to the genhtml
#    instance. (Default: )
#  - CODE_COVERAGE_IGNORE_PATTERN: Extra glob pattern of files to ignore
#
# The generated report will be titled using the $(PACKAGE_NAME) and
# $(PACKAGE_VERSION). In order to add the current git hash to the title,
# use the git-version-gen script, available online.
# Optional variables
# run only on top dir
# ifeq ($(abs_builddir), $(abs_top_builddir))
#CODE_COVERAGE_DIRECTORY ?= $(top_builddir)
#CODE_COVERAGE_OUTPUT_FILE ?= $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage.info
#CODE_COVERAGE_OUTPUT_DIRECTORY ?= $(PACKAGE_NAME)-$(PACKAGE_VERSION)-coverage

#CODE_COVERAGE_BRANCH_COVERAGE ?=
#CODE_COVERAGE_LCOV_SHOPTS_DEFAULT ?= $(if $(CODE_COVERAGE_BRANCH_COVERAGE),--rc lcov_branch_coverage=$(CODE_COVERAGE_BRANCH_COVERAGE))
#CODE_COVERAGE_LCOV_SHOPTS ?= $(CODE_COVERAGE_LCOV_SHOPTS_DEFAULT)
#CODE_COVERAGE_LCOV_OPTIONS_GCOVPATH ?= --gcov-tool "$(GCOV)"
#CODE_COVERAGE_LCOV_OPTIONS_DEFAULT ?= $(CODE_COVERAGE_LCOV_OPTIONS_GCOVPATH)
#CODE_COVERAGE_LCOV_OPTIONS ?= $(CODE_COVERAGE_LCOV_OPTIONS_DEFAULT)
#CODE_COVERAGE_LCOV_RMOPTS_DEFAULT ?=
#CODE_COVERAGE_LCOV_RMOPTS ?= $(CODE_COVERAGE_LCOV_RMOPTS_DEFAULT)
#CODE_COVERAGE_GENHTML_OPTIONS_DEFAULT ?=$(if $(CODE_COVERAGE_BRANCH_COVERAGE),--rc genhtml_branch_coverage=$(CODE_COVERAGE_BRANCH_COVERAGE))
#CODE_COVERAGE_GENHTML_OPTIONS ?= $(CODE_COVERAGE_GENHTML_OPTIONS_DEFAULT)
#CODE_COVERAGE_IGNORE_PATTERN ?=

# Use recursive makes in order to ignore errors during check
#check-code-coverage:
#	-$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -k check
#	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) code-coverage-capture

# Capture code coverage data
#code-coverage-capture: code-coverage-capture-hook
#	$(code_coverage_v_lcov_cap)$(LCOV) $(code_coverage_quiet) $(addprefix --directory ,$(CODE_COVERAGE_DIRECTORY)) --capture --output-file "$(CODE_COVERAGE_OUTPUT_FILE).tmp" --test-name "$(call code_coverage_sanitize,$(PACKAGE_NAME)-$(PACKAGE_VERSION))" --no-checksum --compat-libtool $(CODE_COVERAGE_LCOV_SHOPTS) $(CODE_COVERAGE_LCOV_OPTIONS)
#	$(code_coverage_v_lcov_ign)$(LCOV) $(code_coverage_quiet) $(addprefix --directory ,$(CODE_COVERAGE_DIRECTORY)) --remove "$(CODE_COVERAGE_OUTPUT_FILE).tmp" "/tmp/*" $(CODE_COVERAGE_IGNORE_PATTERN) --output-file "$(CODE_COVERAGE_OUTPUT_FILE)" $(CODE_COVERAGE_LCOV_SHOPTS) $(CODE_COVERAGE_LCOV_RMOPTS)
#	-@rm -f "$(CODE_COVERAGE_OUTPUT_FILE).tmp"
#	$(code_coverage_v_genhtml)LANG=C $(GENHTML) $(code_coverage_quiet) $(addprefix --prefix ,$(CODE_COVERAGE_DIRECTORY)) --output-directory "$(CODE_COVERAGE_OUTPUT_DIRECTORY)" --title "$(PACKAGE_NAME)-$(PACKAGE_VERSION) Code Coverage" --legend --show-details "$(CODE_COVERAGE_OUTPUT_FILE)" $(CODE_COVERAGE_GENHTML_OPTIONS)
#	@echo "file://$(abs_builddir)/$(CODE_COVERAGE_OUTPUT_DIRECTORY)/index.html"

#code-coverage-clean:
#	-$(LCOV) --directory $(top_builddir) -z
#	-rm -rf "$(CODE_COVERAGE_OUTPUT_FILE)" "$(CODE_COVERAGE_OUTPUT_FILE).tmp" "$(CODE_COVERAGE_OUTPUT_DIRECTORY)"
#	-find . \( -name "*.gcda" -o -name "*.gcno" -o -name "*.gcov" \) -delete

#code-coverage-dist-clean:
# else # ifneq ($(abs_builddir), $(abs_top_builddir))
#check-code-coverage:

#code-coverage-capture: code-coverage-capture-hook

#code-coverage-clean:

#code-coverage-dist-clean:
# endif # ifeq ($(abs_builddir), $(abs_top_builddir))
# Use recursive makes in order to ignore errors during check
check-code-coverage:
	@echo "Need to reconfigure with --enable-code-coverage"
# Capture code coverage data
code-coverage-capture: code-coverage-capture-hook
	@echo "Need to reconfigure with --enable-code-coverage"

code-coverage-clean:

code-coverage-dist-clean:

# Hook rule executed before code-coverage-capture, overridable by the user
code-coverage-capture-hook:

.PHONY: check-code-coverage code-coverage-capture code-coverage-dist-clean code-coverage-clean code-coverage-capture-hook

clean-local: code-coverage-clean
distclean-local: code-coverage-dist-clean
gspell-resources.c: $(xml_res) $(shell $(GLIB_COMPILE_RESOURCES) --sourcedir=$(srcdir)/resources --generate-dependencies $(xml_res))
	$(AM_V_GEN) $(GLIB_COMPILE_RESOURCES) --target=$@ --sourcedir=$(srcdir)/resources --generate-source $(xml_res)

gspell-enum-types.h: gspell-enum-types.h.template $(ENUM_TYPES) $(GLIB_MKENUMS)
	$(AM_V_GEN) (cd $(srcdir) && $(GLIB_MKENUMS) --template gspell-enum-types.h.template $(ENUM_TYPES)) > $@

gspell-enum-types.c: gspell-enum-types.c.template $(ENUM_TYPES) $(GLIB_MKENUMS)
	$(AM_V_GEN) (cd $(srcdir) && $(GLIB_MKENUMS) --template gspell-enum-types.c.template $(ENUM_TYPES)) > $@

-include $(INTROSPECTION_MAKEFILE)

Gspell-1.gir: libgspell-1.la $(BUILT_SOURCES)

-include $(VAPIGEN_MAKEFILE)

gspell-1.vapi: Gspell-1.gir

gspell-1.deps:
	$(AM_V_GEN) for pkg in $(gspell_1_vapi_DEPS); do \
		echo $$pkg >> $@; \
	done

-include $(top_srcdir)/git.mk

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
